// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DataHandler.NhlApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Team_nextGameSchedule_dates_games_status : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The abstractGameState property</summary>
        public global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_abstractGameState? AbstractGameState { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The codedGameState property</summary>
        public global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_codedGameState? CodedGameState { get; set; }
        /// <summary>The detailedState property</summary>
        public global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_detailedState? DetailedState { get; set; }
        /// <summary>The startTimeTBD property</summary>
        public bool? StartTimeTBD { get; set; }
        /// <summary>The statusCode property</summary>
        public global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_statusCode? StatusCode { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status"/> and sets the default values.
        /// </summary>
        public Team_nextGameSchedule_dates_games_status()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "abstractGameState", n => { AbstractGameState = n.GetEnumValue<global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_abstractGameState>(); } },
                { "codedGameState", n => { CodedGameState = n.GetEnumValue<global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_codedGameState>(); } },
                { "detailedState", n => { DetailedState = n.GetEnumValue<global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_detailedState>(); } },
                { "startTimeTBD", n => { StartTimeTBD = n.GetBoolValue(); } },
                { "statusCode", n => { StatusCode = n.GetEnumValue<global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_statusCode>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_abstractGameState>("abstractGameState", AbstractGameState);
            writer.WriteEnumValue<global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_codedGameState>("codedGameState", CodedGameState);
            writer.WriteEnumValue<global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_detailedState>("detailedState", DetailedState);
            writer.WriteBoolValue("startTimeTBD", StartTimeTBD);
            writer.WriteEnumValue<global::DataHandler.NhlApiClient.Models.Team_nextGameSchedule_dates_games_status_statusCode>("statusCode", StatusCode);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
