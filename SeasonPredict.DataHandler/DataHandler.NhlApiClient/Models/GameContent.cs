// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DataHandler.NhlApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GameContent : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The copyright property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Copyright { get; set; }
#nullable restore
#else
        public string Copyright { get; set; }
#endif
        /// <summary>The editorial property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameContent_editorial? Editorial { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameContent_editorial Editorial { get; set; }
#endif
        /// <summary>The highlights property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameContent_highlights? Highlights { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameContent_highlights Highlights { get; set; }
#endif
        /// <summary>The link property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Link { get; set; }
#nullable restore
#else
        public string Link { get; set; }
#endif
        /// <summary>The media property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameContent_media? Media { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameContent_media Media { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DataHandler.NhlApiClient.Models.GameContent"/> and sets the default values.
        /// </summary>
        public GameContent()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DataHandler.NhlApiClient.Models.GameContent"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DataHandler.NhlApiClient.Models.GameContent CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DataHandler.NhlApiClient.Models.GameContent();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "copyright", n => { Copyright = n.GetStringValue(); } },
                { "editorial", n => { Editorial = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameContent_editorial>(global::DataHandler.NhlApiClient.Models.GameContent_editorial.CreateFromDiscriminatorValue); } },
                { "highlights", n => { Highlights = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameContent_highlights>(global::DataHandler.NhlApiClient.Models.GameContent_highlights.CreateFromDiscriminatorValue); } },
                { "link", n => { Link = n.GetStringValue(); } },
                { "media", n => { Media = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameContent_media>(global::DataHandler.NhlApiClient.Models.GameContent_media.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("copyright", Copyright);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameContent_editorial>("editorial", Editorial);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameContent_highlights>("highlights", Highlights);
            writer.WriteStringValue("link", Link);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameContent_media>("media", Media);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
