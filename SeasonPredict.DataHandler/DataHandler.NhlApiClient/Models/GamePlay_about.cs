// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DataHandler.NhlApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GamePlay_about : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The dateTime property</summary>
        public DateTimeOffset? DateTime { get; set; }
        /// <summary>The eventId property</summary>
        public double? EventId { get; set; }
        /// <summary>The eventIdx property</summary>
        public double? EventIdx { get; set; }
        /// <summary>The goals property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GamePlay_about_goals? Goals { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GamePlay_about_goals Goals { get; set; }
#endif
        /// <summary>The ordinalNum property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrdinalNum { get; set; }
#nullable restore
#else
        public string OrdinalNum { get; set; }
#endif
        /// <summary>The period property</summary>
        public double? Period { get; set; }
        /// <summary>The periodTime property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PeriodTime { get; set; }
#nullable restore
#else
        public string PeriodTime { get; set; }
#endif
        /// <summary>The periodTimeRemaining property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PeriodTimeRemaining { get; set; }
#nullable restore
#else
        public string PeriodTimeRemaining { get; set; }
#endif
        /// <summary>The periodType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PeriodType { get; set; }
#nullable restore
#else
        public string PeriodType { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DataHandler.NhlApiClient.Models.GamePlay_about"/> and sets the default values.
        /// </summary>
        public GamePlay_about()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DataHandler.NhlApiClient.Models.GamePlay_about"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DataHandler.NhlApiClient.Models.GamePlay_about CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DataHandler.NhlApiClient.Models.GamePlay_about();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dateTime", n => { DateTime = n.GetDateTimeOffsetValue(); } },
                { "eventId", n => { EventId = n.GetDoubleValue(); } },
                { "eventIdx", n => { EventIdx = n.GetDoubleValue(); } },
                { "goals", n => { Goals = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GamePlay_about_goals>(global::DataHandler.NhlApiClient.Models.GamePlay_about_goals.CreateFromDiscriminatorValue); } },
                { "ordinalNum", n => { OrdinalNum = n.GetStringValue(); } },
                { "period", n => { Period = n.GetDoubleValue(); } },
                { "periodTime", n => { PeriodTime = n.GetStringValue(); } },
                { "periodTimeRemaining", n => { PeriodTimeRemaining = n.GetStringValue(); } },
                { "periodType", n => { PeriodType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("dateTime", DateTime);
            writer.WriteDoubleValue("eventId", EventId);
            writer.WriteDoubleValue("eventIdx", EventIdx);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GamePlay_about_goals>("goals", Goals);
            writer.WriteStringValue("ordinalNum", OrdinalNum);
            writer.WriteDoubleValue("period", Period);
            writer.WriteStringValue("periodTime", PeriodTime);
            writer.WriteStringValue("periodTimeRemaining", PeriodTimeRemaining);
            writer.WriteStringValue("periodType", PeriodType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
