// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DataHandler.NhlApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GameEditorial : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The approval property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Approval { get; set; }
#nullable restore
#else
        public string Approval { get; set; }
#endif
        /// <summary>The commenting property</summary>
        public bool? Commenting { get; set; }
        /// <summary>The contributor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameEditorial_contributor? Contributor { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameEditorial_contributor Contributor { get; set; }
#endif
        /// <summary>The dataURI property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DataURI { get; set; }
#nullable restore
#else
        public string DataURI { get; set; }
#endif
        /// <summary>The date property</summary>
        public DateTimeOffset? Date { get; set; }
        /// <summary>The headline property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Headline { get; set; }
#nullable restore
#else
        public string Headline { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The keywordsAll property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>? KeywordsAll { get; set; }
#nullable restore
#else
        public List<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword> KeywordsAll { get; set; }
#endif
        /// <summary>The keywordsDisplay property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>? KeywordsDisplay { get; set; }
#nullable restore
#else
        public List<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword> KeywordsDisplay { get; set; }
#endif
        /// <summary>The media property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameEditorial_media? Media { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameEditorial_media Media { get; set; }
#endif
        /// <summary>The preview property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Preview { get; set; }
#nullable restore
#else
        public string Preview { get; set; }
#endif
        /// <summary>The primaryKeyword property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameEditorialKeyword? PrimaryKeyword { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameEditorialKeyword PrimaryKeyword { get; set; }
#endif
        /// <summary>The seoDescription property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SeoDescription { get; set; }
#nullable restore
#else
        public string SeoDescription { get; set; }
#endif
        /// <summary>The seoKeywords property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SeoKeywords { get; set; }
#nullable restore
#else
        public string SeoKeywords { get; set; }
#endif
        /// <summary>The seoTitle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SeoTitle { get; set; }
#nullable restore
#else
        public string SeoTitle { get; set; }
#endif
        /// <summary>The slug property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Slug { get; set; }
#nullable restore
#else
        public string Slug { get; set; }
#endif
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State { get; set; }
#nullable restore
#else
        public string State { get; set; }
#endif
        /// <summary>The subhead property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subhead { get; set; }
#nullable restore
#else
        public string Subhead { get; set; }
#endif
        /// <summary>The tagline property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Tagline { get; set; }
#nullable restore
#else
        public string Tagline { get; set; }
#endif
        /// <summary>The tokenData property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameEditorial_tokenData? TokenData { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameEditorial_tokenData TokenData { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DataHandler.NhlApiClient.Models.GameEditorial"/> and sets the default values.
        /// </summary>
        public GameEditorial()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DataHandler.NhlApiClient.Models.GameEditorial"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DataHandler.NhlApiClient.Models.GameEditorial CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DataHandler.NhlApiClient.Models.GameEditorial();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "approval", n => { Approval = n.GetStringValue(); } },
                { "commenting", n => { Commenting = n.GetBoolValue(); } },
                { "contributor", n => { Contributor = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameEditorial_contributor>(global::DataHandler.NhlApiClient.Models.GameEditorial_contributor.CreateFromDiscriminatorValue); } },
                { "dataURI", n => { DataURI = n.GetStringValue(); } },
                { "date", n => { Date = n.GetDateTimeOffsetValue(); } },
                { "headline", n => { Headline = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "keywordsAll", n => { KeywordsAll = n.GetCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>(global::DataHandler.NhlApiClient.Models.GameEditorialKeyword.CreateFromDiscriminatorValue)?.AsList(); } },
                { "keywordsDisplay", n => { KeywordsDisplay = n.GetCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>(global::DataHandler.NhlApiClient.Models.GameEditorialKeyword.CreateFromDiscriminatorValue)?.AsList(); } },
                { "media", n => { Media = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameEditorial_media>(global::DataHandler.NhlApiClient.Models.GameEditorial_media.CreateFromDiscriminatorValue); } },
                { "preview", n => { Preview = n.GetStringValue(); } },
                { "primaryKeyword", n => { PrimaryKeyword = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>(global::DataHandler.NhlApiClient.Models.GameEditorialKeyword.CreateFromDiscriminatorValue); } },
                { "seoDescription", n => { SeoDescription = n.GetStringValue(); } },
                { "seoKeywords", n => { SeoKeywords = n.GetStringValue(); } },
                { "seoTitle", n => { SeoTitle = n.GetStringValue(); } },
                { "slug", n => { Slug = n.GetStringValue(); } },
                { "state", n => { State = n.GetStringValue(); } },
                { "subhead", n => { Subhead = n.GetStringValue(); } },
                { "tagline", n => { Tagline = n.GetStringValue(); } },
                { "tokenData", n => { TokenData = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameEditorial_tokenData>(global::DataHandler.NhlApiClient.Models.GameEditorial_tokenData.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("approval", Approval);
            writer.WriteBoolValue("commenting", Commenting);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameEditorial_contributor>("contributor", Contributor);
            writer.WriteStringValue("dataURI", DataURI);
            writer.WriteDateTimeOffsetValue("date", Date);
            writer.WriteStringValue("headline", Headline);
            writer.WriteStringValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>("keywordsAll", KeywordsAll);
            writer.WriteCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>("keywordsDisplay", KeywordsDisplay);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameEditorial_media>("media", Media);
            writer.WriteStringValue("preview", Preview);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>("primaryKeyword", PrimaryKeyword);
            writer.WriteStringValue("seoDescription", SeoDescription);
            writer.WriteStringValue("seoKeywords", SeoKeywords);
            writer.WriteStringValue("seoTitle", SeoTitle);
            writer.WriteStringValue("slug", Slug);
            writer.WriteStringValue("state", State);
            writer.WriteStringValue("subhead", Subhead);
            writer.WriteStringValue("tagline", Tagline);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameEditorial_tokenData>("tokenData", TokenData);
            writer.WriteStringValue("type", Type);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
