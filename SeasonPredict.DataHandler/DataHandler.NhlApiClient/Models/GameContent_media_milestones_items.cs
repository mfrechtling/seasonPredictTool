// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DataHandler.NhlApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GameContent_media_milestones_items : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The highlight property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameHighlight? Highlight { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameHighlight Highlight { get; set; }
#endif
        /// <summary>The ordinalNum property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrdinalNum { get; set; }
#nullable restore
#else
        public string OrdinalNum { get; set; }
#endif
        /// <summary>The period property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Period { get; set; }
#nullable restore
#else
        public string Period { get; set; }
#endif
        /// <summary>The periodTime property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PeriodTime { get; set; }
#nullable restore
#else
        public string PeriodTime { get; set; }
#endif
        /// <summary>The playerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PlayerId { get; set; }
#nullable restore
#else
        public string PlayerId { get; set; }
#endif
        /// <summary>The statsEventId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatsEventId { get; set; }
#nullable restore
#else
        public string StatsEventId { get; set; }
#endif
        /// <summary>The teamId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TeamId { get; set; }
#nullable restore
#else
        public string TeamId { get; set; }
#endif
        /// <summary>The timeAbsolute property</summary>
        public DateTimeOffset? TimeAbsolute { get; set; }
        /// <summary>The timeOffset property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TimeOffset { get; set; }
#nullable restore
#else
        public string TimeOffset { get; set; }
#endif
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::DataHandler.NhlApiClient.Models.GameContent_media_milestones_items_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DataHandler.NhlApiClient.Models.GameContent_media_milestones_items"/> and sets the default values.
        /// </summary>
        public GameContent_media_milestones_items()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DataHandler.NhlApiClient.Models.GameContent_media_milestones_items"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DataHandler.NhlApiClient.Models.GameContent_media_milestones_items CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DataHandler.NhlApiClient.Models.GameContent_media_milestones_items();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "description", n => { Description = n.GetStringValue(); } },
                { "highlight", n => { Highlight = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameHighlight>(global::DataHandler.NhlApiClient.Models.GameHighlight.CreateFromDiscriminatorValue); } },
                { "ordinalNum", n => { OrdinalNum = n.GetStringValue(); } },
                { "period", n => { Period = n.GetStringValue(); } },
                { "periodTime", n => { PeriodTime = n.GetStringValue(); } },
                { "playerId", n => { PlayerId = n.GetStringValue(); } },
                { "statsEventId", n => { StatsEventId = n.GetStringValue(); } },
                { "teamId", n => { TeamId = n.GetStringValue(); } },
                { "timeAbsolute", n => { TimeAbsolute = n.GetDateTimeOffsetValue(); } },
                { "timeOffset", n => { TimeOffset = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::DataHandler.NhlApiClient.Models.GameContent_media_milestones_items_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameHighlight>("highlight", Highlight);
            writer.WriteStringValue("ordinalNum", OrdinalNum);
            writer.WriteStringValue("period", Period);
            writer.WriteStringValue("periodTime", PeriodTime);
            writer.WriteStringValue("playerId", PlayerId);
            writer.WriteStringValue("statsEventId", StatsEventId);
            writer.WriteStringValue("teamId", TeamId);
            writer.WriteDateTimeOffsetValue("timeAbsolute", TimeAbsolute);
            writer.WriteStringValue("timeOffset", TimeOffset);
            writer.WriteStringValue("title", Title);
            writer.WriteEnumValue<global::DataHandler.NhlApiClient.Models.GameContent_media_milestones_items_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
