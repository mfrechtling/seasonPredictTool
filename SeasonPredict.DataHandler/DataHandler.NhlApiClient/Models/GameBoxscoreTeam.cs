// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DataHandler.NhlApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GameBoxscoreTeam : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The coaches property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_coaches>? Coaches { get; set; }
#nullable restore
#else
        public List<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_coaches> Coaches { get; set; }
#endif
        /// <summary>The goalies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<double?>? Goalies { get; set; }
#nullable restore
#else
        public List<double?> Goalies { get; set; }
#endif
        /// <summary>The onIce property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<double?>? OnIce { get; set; }
#nullable restore
#else
        public List<double?> OnIce { get; set; }
#endif
        /// <summary>The onIcePlus property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_onIcePlus>? OnIcePlus { get; set; }
#nullable restore
#else
        public List<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_onIcePlus> OnIcePlus { get; set; }
#endif
        /// <summary>The penaltyBox property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<double?>? PenaltyBox { get; set; }
#nullable restore
#else
        public List<double?> PenaltyBox { get; set; }
#endif
        /// <summary>The players property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_players? Players { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_players Players { get; set; }
#endif
        /// <summary>The scratches property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<double?>? Scratches { get; set; }
#nullable restore
#else
        public List<double?> Scratches { get; set; }
#endif
        /// <summary>The skaters property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<double?>? Skaters { get; set; }
#nullable restore
#else
        public List<double?> Skaters { get; set; }
#endif
        /// <summary>The team property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_team? Team { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_team Team { get; set; }
#endif
        /// <summary>The teamStats property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_teamStats? TeamStats { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_teamStats TeamStats { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam"/> and sets the default values.
        /// </summary>
        public GameBoxscoreTeam()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "coaches", n => { Coaches = n.GetCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_coaches>(global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_coaches.CreateFromDiscriminatorValue)?.AsList(); } },
                { "goalies", n => { Goalies = n.GetCollectionOfPrimitiveValues<double?>()?.AsList(); } },
                { "onIce", n => { OnIce = n.GetCollectionOfPrimitiveValues<double?>()?.AsList(); } },
                { "onIcePlus", n => { OnIcePlus = n.GetCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_onIcePlus>(global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_onIcePlus.CreateFromDiscriminatorValue)?.AsList(); } },
                { "penaltyBox", n => { PenaltyBox = n.GetCollectionOfPrimitiveValues<double?>()?.AsList(); } },
                { "players", n => { Players = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_players>(global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_players.CreateFromDiscriminatorValue); } },
                { "scratches", n => { Scratches = n.GetCollectionOfPrimitiveValues<double?>()?.AsList(); } },
                { "skaters", n => { Skaters = n.GetCollectionOfPrimitiveValues<double?>()?.AsList(); } },
                { "team", n => { Team = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_team>(global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_team.CreateFromDiscriminatorValue); } },
                { "teamStats", n => { TeamStats = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_teamStats>(global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_teamStats.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_coaches>("coaches", Coaches);
            writer.WriteCollectionOfPrimitiveValues<double?>("goalies", Goalies);
            writer.WriteCollectionOfPrimitiveValues<double?>("onIce", OnIce);
            writer.WriteCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_onIcePlus>("onIcePlus", OnIcePlus);
            writer.WriteCollectionOfPrimitiveValues<double?>("penaltyBox", PenaltyBox);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_players>("players", Players);
            writer.WriteCollectionOfPrimitiveValues<double?>("scratches", Scratches);
            writer.WriteCollectionOfPrimitiveValues<double?>("skaters", Skaters);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_team>("team", Team);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.GameBoxscoreTeam_teamStats>("teamStats", TeamStats);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
