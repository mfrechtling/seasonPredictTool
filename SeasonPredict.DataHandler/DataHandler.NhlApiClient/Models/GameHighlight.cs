// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace DataHandler.NhlApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GameHighlight : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The authFlow property</summary>
        public bool? AuthFlow { get; set; }
        /// <summary>The blurb property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Blurb { get; set; }
#nullable restore
#else
        public string Blurb { get; set; }
#endif
        /// <summary>The date property</summary>
        public DateTimeOffset? Date { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The duration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Duration { get; set; }
#nullable restore
#else
        public string Duration { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The image property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::DataHandler.NhlApiClient.Models.Photo? Image { get; set; }
#nullable restore
#else
        public global::DataHandler.NhlApiClient.Models.Photo Image { get; set; }
#endif
        /// <summary>The keywords property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>? Keywords { get; set; }
#nullable restore
#else
        public List<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword> Keywords { get; set; }
#endif
        /// <summary>The mediaPlaybackId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MediaPlaybackId { get; set; }
#nullable restore
#else
        public string MediaPlaybackId { get; set; }
#endif
        /// <summary>The mediaState property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MediaState { get; set; }
#nullable restore
#else
        public string MediaState { get; set; }
#endif
        /// <summary>The playbacks property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::DataHandler.NhlApiClient.Models.GameHighlight_playbacks>? Playbacks { get; set; }
#nullable restore
#else
        public List<global::DataHandler.NhlApiClient.Models.GameHighlight_playbacks> Playbacks { get; set; }
#endif
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::DataHandler.NhlApiClient.Models.GameHighlight_type? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::DataHandler.NhlApiClient.Models.GameHighlight"/> and sets the default values.
        /// </summary>
        public GameHighlight()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::DataHandler.NhlApiClient.Models.GameHighlight"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::DataHandler.NhlApiClient.Models.GameHighlight CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::DataHandler.NhlApiClient.Models.GameHighlight();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "authFlow", n => { AuthFlow = n.GetBoolValue(); } },
                { "blurb", n => { Blurb = n.GetStringValue(); } },
                { "date", n => { Date = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "duration", n => { Duration = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "image", n => { Image = n.GetObjectValue<global::DataHandler.NhlApiClient.Models.Photo>(global::DataHandler.NhlApiClient.Models.Photo.CreateFromDiscriminatorValue); } },
                { "keywords", n => { Keywords = n.GetCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>(global::DataHandler.NhlApiClient.Models.GameEditorialKeyword.CreateFromDiscriminatorValue)?.AsList(); } },
                { "mediaPlaybackId", n => { MediaPlaybackId = n.GetStringValue(); } },
                { "mediaState", n => { MediaState = n.GetStringValue(); } },
                { "playbacks", n => { Playbacks = n.GetCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameHighlight_playbacks>(global::DataHandler.NhlApiClient.Models.GameHighlight_playbacks.CreateFromDiscriminatorValue)?.AsList(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::DataHandler.NhlApiClient.Models.GameHighlight_type>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("authFlow", AuthFlow);
            writer.WriteStringValue("blurb", Blurb);
            writer.WriteDateTimeOffsetValue("date", Date);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("duration", Duration);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::DataHandler.NhlApiClient.Models.Photo>("image", Image);
            writer.WriteCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameEditorialKeyword>("keywords", Keywords);
            writer.WriteStringValue("mediaPlaybackId", MediaPlaybackId);
            writer.WriteStringValue("mediaState", MediaState);
            writer.WriteCollectionOfObjectValues<global::DataHandler.NhlApiClient.Models.GameHighlight_playbacks>("playbacks", Playbacks);
            writer.WriteStringValue("title", Title);
            writer.WriteEnumValue<global::DataHandler.NhlApiClient.Models.GameHighlight_type>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
